<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀)
 -->
<mapper namespace="com.zz.ccy.mapping.WeixinUserMsbMapper">
    <!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复
    使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
    resultType="me.gacl.domain.User"就表示将查询结果封装成一个User类的对象返回
    User类就是users表所对应的实体类
    -->
    <!-- *********************************************枚士币MSB
           根据id查询得到一个枚士币记录对象
     -->
     <resultMap type="com.zz.ccy.entity.UserMsbRecord" id="userMR">
       <id column="id" jdbcType="INTEGER" property="id"/>
       <result column="fromusername" jdbcType="VARCHAR" property="fromusername"/>
       <result column="tousername" jdbcType="VARCHAR" property="tousername"/>
       <result column="touserid" jdbcType="INTEGER" property="touserid"/>
       <result column="fromuserid" jdbcType="INTEGER" property="fromuserid"/>
       <result column="num" jdbcType="INTEGER" property="num"/>
       <result column="type" jdbcType="INTEGER" property="type"/>
       <result column="storename" jdbcType="VARCHAR" property="storename"/>
       <result column="wzname" jdbcType="VARCHAR" property="wzname"/>
       <result column="wzid" jdbcType="INTEGER" property="wzid"/>
       <result column="openId" jdbcType="VARCHAR" property="openId"/>
       <result column="storeid" jdbcType="INTEGER" property="storeid"/>
       <result column="timec" jdbcType="VARCHAR" property="timec"/>
     </resultMap>
     
     
     
     
         <!-- *********************************************指定店铺枚士币MSB
           根据id查询得到一个枚士币记录对象
     -->
     <resultMap type="com.zz.ccy.entity.StoreMsb" id="StoreMsb">
       <id column="id" jdbcType="INTEGER" property="id"/>
       <result column="storename" jdbcType="VARCHAR" property="storename"/>
       <result column="address" jdbcType="VARCHAR" property="address"/>
       <result column="level" jdbcType="INTEGER" property="level"/>
       <result column="num" jdbcType="INTEGER" property="num"/>
       <result column="userid" jdbcType="INTEGER" property="userid"/>
       <result column="status" jdbcType="INTEGER" property="status"/>
       <result column="storeid" jdbcType="INTEGER" property="storeid"/>
       <result column="tel" jdbcType="VARCHAR" property="tel"/>
       <result column="imgsurl" jdbcType="VARCHAR" property="imgsurl"/>
       <result column="starttime" jdbcType="VARCHAR" property="starttime"/>
       <result column="endtime" jdbcType="VARCHAR" property="endtime"/>
     </resultMap>
     
     <!-- 用户交易转账记录 -->
     <select id="getUserdeal" parameterType="integer" resultMap="userMR">
     select * from v_user_msb_deal where touserid=#{userid} or fromuserid=#{userid}
     </select>
         <!-- 用户交易消费记录 -->
     <select id="getUserconsume" parameterType="integer" resultMap="userMR">
    select * from v_user_msb_consume_record where fromuserid=#{userid}
     </select>
         <!-- 用户交易任务奖励记录 -->
     <select id="getUsertaskaward" parameterType="integer" resultMap="userMR">
     
       select * from v_user_msb_task_award where touserid=#{userid}
       
     </select>
     
     <!-- 添加赠送记录 -->
     <update id="addDealMsb" >
     
     {call dealmsb(#{touserid},#{num},#{storeid},#{type},#{timec})}
     
     </update>
     
             <!-- 用户查询指定店铺枚士币 -->
     <select id="getStoreMsb" parameterType="integer" resultMap="StoreMsb">
     
      select * from v_store_msb where userid=#{userid} and storeid>0 and status=0 order by starttime desc
       
     </select>
     
              <!-- 用户查询所有枚士币 -->
     <select id="getMsb" parameterType="integer" resultMap="StoreMsb">
     
      select * from v_store_msb where userid=#{userid} and status=0 order by starttime desc
       
     </select>
     
     
     
     <!-- 根据openId获取WeiXinUserInfo集合
    <select id="getDyhUserList" parameterType="string" resultMap="WeixinUserInfoResult">
        select * from t_hz_wx_dyh_weixinUserInfo where openId=#{id}
    </select>-->
    <!-- 根据openId获取WeiXinUserInfo集合
    <select id="getFwhUserList" parameterType="string" resultMap="WeixinUserInfoResult">
        select * from t_hz_wx_fwh_weixinUserInfo where openId=#{id}
    </select>
    -->
    
   
	

	
	<!-- 获取WeixinUserInfo nickname为null的openId为空的集合 
	<select id="getDyhUserListNicknameIsNull" parameterType="string" resultMap="WeixinUserInfoResult">
        select openId from t_hz_wx_dyh_weixinUserInfo where nickname is null
    </select>-->
    <!-- 获取WeixinUserInfo nickname为null的openId为空的集合 
	<select id="getFwhUserListNicknameIsNull" parameterType="string" resultMap="WeixinUserInfoResult">
        select openId from t_hz_wx_fwh_weixinUserInfo where nickname is null
    </select>-->
    
    <!-- 获取WeixinUserInfo 的openId的集合 
	<select id="getDyhOpenIdList" parameterType="string" resultMap="WeixinUserInfoResult">
        select openId from t_hz_wx_dyh_weixinUserInfo
    </select>-->
    <!-- 获取WeixinUserInfo 的openId的集合 
	<select id="getFwhOpenIdList" parameterType="string" resultMap="WeixinUserInfoResult">
        select openId from t_hz_wx_fwh_weixinUserInfo
    </select>-->
    
    <!-- 获取WeixinUserInfoList 
    <select id="getDyhUserInfoList" resultMap="WeixinUserInfoResult">
       select * from t_hz_wx_dyh_weixinUserInfo
    </select>-->
    <!-- 获取WeixinUserInfoList 
    <select id="getFwhUserInfoList" resultMap="WeixinUserInfoResult">
       select * from t_hz_wx_fwh_weixinUserInfo
    </select>-->
    
    <!-- 批量插入 
    <insert id="insertDyhUserInfoBatch" useGeneratedKeys="true" parameterType="java.util.List">
      insert into t_hz_wx_dyh_weixinUserInfo (openId,subscribe,subscribeTime,nickname,sex,country,province,city,language,headImgUrl,groupId) values 
      <foreach collection="list" item="item" index="index" separator=","> 
         (#{item.openId},#{item.subscribe},#{item.subscribeTime},#{item.nickname},#{item.sex},#{item.country},#{item.province},#{item.city},#{item.language},#{item.headImgUrl},#{item.groupId}) 
      </foreach> 
    </insert>-->
    <!-- 批量插入 
    <insert id="insertFwhUserInfoBatch" useGeneratedKeys="true" parameterType="java.util.List">
      insert into t_hz_wx_fwh_weixinUserInfo (openId,subscribe,subscribeTime,nickname,sex,country,province,city,language,headImgUrl,groupId) values 
      <foreach collection="list" item="item" index="index" separator=","> 
         (#{item.openId},#{item.subscribe},#{item.subscribeTime},#{item.nickname},#{item.sex},#{item.country},#{item.province},#{item.city},#{item.language},#{item.headImgUrl},#{item.groupId}) 
      </foreach> 
    </insert>-->
    
    <!-- 清零 
    <delete id="deleteAllDyhUserInfo">
       delete from t_hz_wx_dyh_weixinUserInfo
    </delete>-->
    <!-- 清零 
    <delete id="deleteAllFwhUserInfo">
       delete from t_hz_wx_fwh_weixinUserInfo
    </delete>-->
    

    <!-- 根据openId删除WeiXinUserInfo  
    <delete id="deleteFwhUserInfoByOpenId" parameterType="string">
       delete from t_hz_wx_fwh_weixinUserInfo where openId=#{openId}
    </delete>-->
    <!-- 根据openId查询用户是否存在 
    <select id="checkUserIsExistByOpenId" parameterType="string" resultType="int">
       select count(*) from t_hz_wx_fwh_weixinUserInfo where openId=#{openId}
    </select>-->
    
    <!-- 根据用户手机号查询用户性别 
    <select id="getUserSexByPhoneNum" parameterType="map" resultType="string">
       select top(1) sex from t_hz_wx_signup where phone=#{phoneNum} and serial_num=#{yuyueCode}
    </select>-->
</mapper>