<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀)
 -->
<mapper namespace="com.zz.ccy.mapping.WeixinNoticeMapper">
    <!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复
    使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
    resultType="me.gacl.domain.User"就表示将查询结果封装成一个User类的对象返回
    User类就是users表所对应的实体类
    -->
    <!-- *********************************************店铺信息收藏和历史公用一个xml
           
     -->
	<resultMap type="com.zz.ccy.entity.UserNotice" id="notice">
		<id column="id" jdbcType="INTEGER" property="id" />
		<id column="userid" jdbcType="INTEGER" property="userid" />
		<id column="modeid" jdbcType="INTEGER" property="modeid" />
		<result column="style" jdbcType="VARCHAR" property="style" />
		<result column="color" jdbcType="VARCHAR" property="color" />
		<result column="content" jdbcType="VARCHAR" property="content" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="timec" jdbcType="VARCHAR" property="timec" />
		<result column="readtimec" jdbcType="VARCHAR" property="readtimec" />
	</resultMap>

     
              <!-- 用户通知列表 -->
     <select id="getNoticelist" parameterType="integer" resultMap="notice">
     
      select * from v_user_notice where userid=#{userid} and (status=0 or status=1) order by timec desc
       
     </select>
                <!-- 阅读通知-->
     <update id="updateNotice" parameterType="map">
     
      update d_wx_notice set status=1 where id=#{id} 
       
     </update>
                    <!-- 删除通知-->
     <update id="updateNoticeAll" parameterType="integer">
     
      update d_wx_notice set status=2 where userid=#{userid} 
       
     </update>
     
     
     
     
     
     </mapper>
